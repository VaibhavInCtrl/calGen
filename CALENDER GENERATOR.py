def convertlist(n):
    for i in range(len(n)) :
        if n[i] == 00:
            n[i] = "  "
        elif n[i] == 1 or n[i] == 2 or n[i] == 3 or n[i] == 4 or n[i] == 5 or n[i] == 6 or n[i] == 7 or n[i] == 8 or n[i] == 9:
            n[i] = "{:0=2d}".format(n[i])
    return n


def leapyear(n):
    if n % 400 == 0:
        return True
    elif n % 100 == 0 and n % 400 != 0 :
        return False
    elif n % 4 == 0 :
        return True
    else:
        return False


monthlistdays = [("January",31),
("February",28),
("March",31),
("April",30),
("May",31),
("June",30),
("July",31),
("August",31),
("September",30),
("October",31),
("November",30),
("December",31)]


weekdays = ['M  ','T  ','W  ','T ','F  ','S ',"S  "]


def start_day_of_year_calculator(n):
    days = 0
    for year in range(1753,n):
        if leapyear(year):
            days += 366
        else:
            days += 365
    weekday = days % 7
    return weekdays[weekday]


def start_day_of_month_calculator(n,given_month):
    if leapyear(n):
        monthlistdays[1] = ("February",29)
    total_days = weekdays.index(start_day_of_year_calculator(n))
    for month in monthlistdays:
        if given_month == month[0]:
            break
        else:
            total_days += month[1]
    return weekdays[total_days % 7]


def month(n,mo):
    if leapyear(n):
        monthlistdays[1] = ("February",29)
    days_in_month = 0
    B = [mo]
    for month,day in monthlistdays:
        if month == mo:
            days_in_month = day
            break
    starting_day_of_month = weekdays.index(start_day_of_month_calculator(n,mo))
    for i in range(starting_day_of_month):
        B.append(0)
    zeroes = 38 + 6 - starting_day_of_month
    for date in range(1,zeroes):
            if date < days_in_month + 1:
                B.append(int("{0}".format(date)))
                starting_day_of_month += 1
            if starting_day_of_month == 7:
                starting_day_of_month = 0
            elif date > days_in_month and starting_day_of_month != 7:
                B.append(00)
                starting_day_of_month += 1
            elif date > days_in_month and starting_day_of_month == 7:
                starting_day_of_month = 0
    return B


def calender(n):
    January= convertlist(month(n,"January"))
    February= convertlist(month(n,"February"))
    March= convertlist(month(n,"March"))
    April= convertlist(month(n,"April"))
    May= convertlist(month(n,"May"))
    June= convertlist(month(n,"June"))
    July= convertlist(month(n,"July"))
    August= convertlist(month(n,"August"))
    September= convertlist(month(n,"September"))
    October= convertlist(month(n,"October"))
    November= convertlist(month(n,"November"))
    December= convertlist(month(n,"December"))
    year = "                             *CALENDER {}*\n\n\n".format(n)
    Full_year =  """ 
      -{0[0]}-              -{1[0]}-                  -{2[0]}-\n
M  T  W  T  F  S  S      M  T  W  T  F  S  S      M  T  W  T  F  S  S
{0[1]} {0[2]} {0[3]} {0[4]} {0[5]} {0[6]} {0[7]}  |  {1[1]} {1[2]} {1[3]} {1[4]} {1[5]} {1[6]} {1[7]}  |  {2[1]} {2[2]} {2[3]} {2[4]} {2[5]} {2[6]} {2[7]}
{0[8]} {0[9]} {0[10]} {0[11]} {0[12]} {0[13]} {0[14]}  |  {1[8]} {1[9]} {1[10]} {1[11]} {1[12]} {1[13]} {1[14]}  |  {2[8]} {2[9]} {2[10]} {2[11]} {2[12]} {2[13]} {2[14]}  
{0[15]} {0[16]} {0[17]} {0[18]} {0[19]} {0[20]} {0[21]}  |  {1[15]} {1[16]} {1[17]} {1[18]} {1[19]} {1[20]} {1[21]}  |  {2[15]} {2[16]} {2[17]} {2[18]} {2[19]} {2[20]} {2[21]}  
{0[22]} {0[23]} {0[24]} {0[25]} {0[26]} {0[27]} {0[28]}  |  {1[22]} {1[23]} {1[24]} {1[25]} {1[26]} {1[27]} {1[28]}  |  {2[22]} {2[23]} {2[24]} {2[25]} {2[26]} {2[27]} {2[28]} 
{0[29]} {0[30]} {0[31]} {0[32]} {0[33]} {0[34]} {0[35]}  |  {1[29]} {1[30]} {1[31]} {1[32]} {1[33]} {1[34]} {1[35]}  |  {2[29]} {2[30]} {2[31]} {2[32]} {2[33]} {2[34]} {2[35]} 
{0[36]} {0[37]} {0[38]} {0[39]} {0[40]} {0[41]} {0[42]}  |  {1[36]} {1[37]} {1[38]} {1[39]} {1[40]} {1[41]} {1[42]}  |  {2[36]} {2[37]} {2[38]} {2[39]} {2[40]} {2[41]} {2[42]}    
   \n\n\n     -{3[0]}-                    -{4[0]}-                    -{5[0]}-\n
M  T  W  T  F  S  S      M  T  W  T  F  S  S      M  T  W  T  F  S  S
{3[1]} {3[2]} {3[3]} {3[4]} {3[5]} {3[6]} {3[7]}  |  {4[1]} {4[2]} {4[3]} {4[4]} {4[5]} {4[6]} {4[7]}  |  {5[1]} {5[2]} {5[3]} {5[4]} {5[5]} {5[6]} {5[7]}
{3[8]} {3[9]} {3[10]} {3[11]} {3[12]} {3[13]} {3[14]}  |  {4[8]} {4[9]} {4[10]} {4[11]} {4[12]} {4[13]} {4[14]}  |  {5[8]} {5[9]} {5[10]} {5[11]} {5[12]} {5[13]} {5[14]}  
{3[15]} {3[16]} {3[17]} {3[18]} {3[19]} {3[20]} {3[21]}  |  {4[15]} {4[16]} {4[17]} {4[18]} {4[19]} {4[20]} {4[21]}  |  {5[15]} {5[16]} {5[17]} {5[18]} {5[19]} {5[20]} {5[21]}  
{3[22]} {3[23]} {3[24]} {3[25]} {3[26]} {3[27]} {3[28]}  |  {4[22]} {4[23]} {4[24]} {4[25]} {4[26]} {4[27]} {4[28]}  |  {5[22]} {5[23]} {5[24]} {5[25]} {5[26]} {5[27]} {5[28]} 
{3[29]} {3[30]} {3[31]} {3[32]} {3[33]} {3[34]} {3[35]}  |  {4[29]} {4[30]} {4[31]} {4[32]} {4[33]} {4[34]} {4[35]}  |  {5[29]} {5[30]} {5[31]} {5[32]} {5[33]} {5[34]} {5[35]} 
{3[36]} {3[37]} {3[38]} {3[39]} {3[40]} {3[41]} {3[42]}  |  {4[36]} {4[37]} {4[38]} {4[39]} {4[40]} {4[41]} {4[42]}  |  {5[36]} {5[37]} {5[38]} {5[39]} {5[40]} {5[41]} {5[42]}    
    \n\n\n       -{6[0]}-                 -{7[0]}-                 -{8[0]}-\n
M  T  W  T  F  S  S      M  T  W  T  F  S  S      M  T  W  T  F  S  S
{6[1]} {6[2]} {6[3]} {6[4]} {6[5]} {6[6]} {6[7]}  |  {7[1]} {7[2]} {7[3]} {7[4]} {7[5]} {7[6]} {7[7]}  |  {8[1]} {8[2]} {8[3]} {8[4]} {8[5]} {8[6]} {8[7]}
{6[8]} {6[9]} {6[10]} {6[11]} {6[12]} {6[13]} {6[14]}  |  {7[8]} {7[9]} {7[10]} {7[11]} {7[12]} {7[13]} {7[14]}  |  {8[8]} {8[9]} {8[10]} {8[11]} {8[12]} {8[13]} {8[14]}  
{6[15]} {6[16]} {6[17]} {6[18]} {6[19]} {6[20]} {6[21]}  |  {7[15]} {7[16]} {7[17]} {7[18]} {7[19]} {7[20]} {7[21]}  |  {8[15]} {8[16]} {8[17]} {8[18]} {8[19]} {8[20]} {8[21]}  
{6[22]} {6[23]} {6[24]} {6[25]} {6[26]} {6[27]} {6[28]}  |  {7[22]} {7[23]} {7[24]} {7[25]} {7[26]} {7[27]} {7[28]}  |  {8[22]} {8[23]} {8[24]} {8[25]} {8[26]} {8[27]} {8[28]} 
{6[29]} {6[30]} {6[31]} {6[32]} {6[33]} {6[34]} {6[35]}  |  {7[29]} {7[30]} {7[31]} {7[32]} {7[33]} {7[34]} {7[35]}  |  {8[29]} {8[30]} {8[31]} {8[32]} {8[33]} {8[34]} {8[35]} 
{6[36]} {6[37]} {6[38]} {6[39]} {6[40]} {6[41]} {6[42]}  |  {7[36]} {7[37]} {7[38]} {7[39]} {7[40]} {7[41]} {7[42]}  |  {8[36]} {8[37]} {8[38]} {8[39]} {8[40]} {8[41]} {8[42]}    
     \n\n\n      -{9[0]}-              -{10[0]}-              -{11[0]}-\n
M  T  W  T  F  S  S      M  T  W  T  F  S  S      M  T  W  T  F  S  S
{9[1]} {9[2]} {9[3]} {9[4]} {9[5]} {9[6]} {9[7]}  |  {10[1]} {10[2]} {10[3]} {10[4]} {10[5]} {10[6]} {10[7]}  |  {11[1]} {11[2]} {11[3]} {11[4]} {11[5]} {11[6]} {11[7]}
{9[8]} {9[9]} {9[10]} {9[11]} {9[12]} {9[13]} {9[14]}  |  {10[8]} {10[9]} {10[10]} {10[11]} {10[12]} {10[13]} {10[14]}  |  {11[8]} {11[9]} {11[10]} {11[11]} {11[12]} {11[13]} {11[14]}  
{9[15]} {9[16]} {9[17]} {9[18]} {9[19]} {9[20]} {9[21]}  |  {10[15]} {10[16]} {10[17]} {10[18]} {10[19]} {10[20]} {10[21]}  |  {11[15]} {11[16]} {11[17]} {11[18]} {11[19]} {11[20]} {11[21]}  
{9[22]} {9[23]} {9[24]} {9[25]} {9[26]} {9[27]} {9[28]}  |  {10[22]} {10[23]} {10[24]} {10[25]} {10[26]} {10[27]} {10[28]}  |  {11[22]} {11[23]} {11[24]} {11[25]} {11[26]} {11[27]} {11[28]} 
{9[29]} {9[30]} {9[31]} {9[32]} {9[33]} {9[34]} {9[35]}  |  {10[29]} {10[30]} {10[31]} {10[32]} {10[33]} {10[34]} {10[35]}  |  {11[29]} {11[30]} {11[31]} {11[32]} {11[33]} {11[34]} {11[35]} 
{9[36]} {9[37]} {9[38]} {9[39]} {9[40]} {9[41]} {9[42]}  |  {10[36]} {10[37]} {10[38]} {10[39]} {10[40]} {10[41]} {10[42]}  |  {11[36]} {11[37]} {11[38]} {11[39]} {11[40]} {11[41]} {11[42]}    
""".format(January,February,March,April,May,June,July,August,September,October,November,December)
    calender_year = year + Full_year
    return calender_year


def printCalender(n):
    with open("calender.txt","w") as f:
        f.write(calender(n))


printCalender(1798)